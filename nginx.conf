worker_processes 1;
 
events { worker_connections 1024; }

# https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching

http {
 
    sendfile on;
 
    upstream docker-nginx {
        server nginx:80;
    }
 
    upstream docker-apache {
        server apache:80;
    }

    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
 
    server {
        listen 8080;

        # proxy_pass sets the protocol and address of a proxied server and is what makes this a reverse proxy
        # when accessing the machine via port 8080, the reverse proxy will serve whatever is in the proxy_pass definition
        # poining to name of upstream server, which means nginx service will be served

        # The "Host" header is re-written to the value defined by the $proxy_host variable. 
        # This will be the IP address or name and port number of the upstream, directly as defined by the proxy_pass directive.
        location / {
            proxy_pass         http://docker-nginx; 
            proxy_redirect     off;
        }
    }
 
    server {
        listen 8081;
 
        location / {
            proxy_pass         http://docker-apache;
            proxy_redirect     off;
        }
    }
}